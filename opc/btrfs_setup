#!/usr/bin/env bash
set -eu

# [ "$UID" -eq 0 ] || {
# 	echo "This script must be run as root."
# 	exit 1
# }
#
#### Get the UUID of your btrfs system root.
ROOT_UUID="$(lsblk -f | grep FEDORA | sed 's/ \+/ /g' | cut -d ' ' -f 4)"
#### Get the btrfs subvolume mount options from your fstab.
OPTIONS="compress=lzo"

#### Declare rest of the subvolumes you want to create in the array.
#### Copy from 'SUBVOLUMES' to ')', paste it in terminal, and hit <Enter>.
mkdir -vp /home/"$USER"/.var/app/com.brave.Browser

SUBVOLUMES=(
	"opt"
	"nix"
	"var/cache"
	"var/crash"
	"var/tmp"
	"var/log"
	"var/spool"
	"var/www"
	"var/lib/AccountsService"
	"var/lib/gdm"
	"home/$USER/.var/app/com.brave.Browser"
)
#### Run the for loop to create the subvolumes.
#### Copy from 'for' to 'done', paste it in terminal, and hit <Enter>.
for dir in "${SUBVOLUMES[@]}"; do
	if [[ -d "/${dir}" ]]; then
		sudo mv -v "/${dir}" "/${dir}-old"
		sudo btrfs subvolume create "/${dir}"
		sudo cp -ar "/${dir}-old/." "/${dir}/"
	else
		sudo btrfs subvolume create "/${dir}"
	fi
	sudo restorecon -RF "/${dir}"
	printf "%-41s %-24s %-5s %-s %-s\n" \
		"UUID=${ROOT_UUID}" \
		"/${dir}" \
		"btrfs" \
		"subvol=${dir},${OPTIONS}" \
		"0 0" |
		sudo tee -a /etc/fstab
done
sleep 2
chmod 1777 /var/tmp
chmod 1770 /var/lib/gdm
chown -R "$USER": /home/"$USER"/.var/app/com.brave.Browser

systemctl daemon-reload
mount -va

for dir in "${SUBVOLUMES[@]}"; do
	if [[ -d "/${dir}-old" ]]; then
		sudo rm -rvf "/${dir}-old"
	fi
done

btrfs subvolume list /
